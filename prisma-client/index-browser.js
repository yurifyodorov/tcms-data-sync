
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.RunScalarFieldEnum = {
  id: 'id',
  runNumber: 'runNumber',
  status: 'status',
  browser: 'browser',
  platform: 'platform',
  environment: 'environment',
  featuresCount: 'featuresCount',
  scenariosCount: 'scenariosCount',
  stepsCount: 'stepsCount',
  featurePassCount: 'featurePassCount',
  featureFailCount: 'featureFailCount',
  featureSkipCount: 'featureSkipCount',
  featureBlockedCount: 'featureBlockedCount',
  featureRetestCount: 'featureRetestCount',
  featureUntestedCount: 'featureUntestedCount',
  featureUndefinedCount: 'featureUndefinedCount',
  scenarioPassCount: 'scenarioPassCount',
  scenarioFailCount: 'scenarioFailCount',
  scenarioSkipCount: 'scenarioSkipCount',
  scenarioBlockedCount: 'scenarioBlockedCount',
  scenarioRetestCount: 'scenarioRetestCount',
  scenarioUntestedCount: 'scenarioUntestedCount',
  scenarioUndefinedCount: 'scenarioUndefinedCount',
  stepPassCount: 'stepPassCount',
  stepFailCount: 'stepFailCount',
  stepSkipCount: 'stepSkipCount',
  stepBlockedCount: 'stepBlockedCount',
  stepRetestCount: 'stepRetestCount',
  stepUntestedCount: 'stepUntestedCount',
  stepUndefinedCount: 'stepUndefinedCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  duration: 'duration',
  auto: 'auto'
};

exports.Prisma.RunFeatureScalarFieldEnum = {
  id: 'id',
  runId: 'runId',
  featureId: 'featureId',
  status: 'status',
  duration: 'duration',
  createdAt: 'createdAt'
};

exports.Prisma.RunScenarioScalarFieldEnum = {
  id: 'id',
  runId: 'runId',
  scenarioId: 'scenarioId',
  status: 'status',
  duration: 'duration',
  createdAt: 'createdAt'
};

exports.Prisma.RunStepScalarFieldEnum = {
  id: 'id',
  runId: 'runId',
  stepId: 'stepId',
  scenarioId: 'scenarioId',
  status: 'status',
  duration: 'duration',
  errorMessage: 'errorMessage',
  stackTrace: 'stackTrace',
  createdAt: 'createdAt'
};

exports.Prisma.FeatureScalarFieldEnum = {
  id: 'id',
  keyword: 'keyword',
  name: 'name',
  description: 'description',
  active: 'active',
  contentHash: 'contentHash',
  position: 'position'
};

exports.Prisma.ScenarioScalarFieldEnum = {
  id: 'id',
  featureId: 'featureId',
  keyword: 'keyword',
  name: 'name',
  description: 'description',
  active: 'active',
  contentHash: 'contentHash',
  position: 'position'
};

exports.Prisma.StepScalarFieldEnum = {
  id: 'id',
  keyword: 'keyword',
  name: 'name',
  contentHash: 'contentHash',
  active: 'active',
  media: 'media'
};

exports.Prisma.ScenarioStepScalarFieldEnum = {
  scenarioId: 'scenarioId',
  stepId: 'stepId',
  keyword: 'keyword',
  position: 'position'
};

exports.Prisma.TagScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.FeatureTagScalarFieldEnum = {
  featureId: 'featureId',
  tagId: 'tagId'
};

exports.Prisma.ScenarioTagScalarFieldEnum = {
  scenarioId: 'scenarioId',
  tagId: 'tagId'
};

exports.Prisma.MapNodeScalarFieldEnum = {
  id: 'id',
  x: 'x',
  y: 'y',
  width: 'width',
  height: 'height',
  rotation: 'rotation',
  scale: 'scale',
  hidden: 'hidden',
  zIndex: 'zIndex'
};

exports.Prisma.MapNodeFeatureDataScalarFieldEnum = {
  id: 'id',
  featureId: 'featureId',
  mapNodeId: 'mapNodeId'
};

exports.Prisma.MapNodeImageDataScalarFieldEnum = {
  id: 'id',
  src: 'src',
  mapNodeId: 'mapNodeId'
};

exports.Prisma.MapNodeDependencyScalarFieldEnum = {
  id: 'id',
  sourceNodeId: 'sourceNodeId',
  targetNodeId: 'targetNodeId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Status = exports.$Enums.Status = {
  passed: 'passed',
  failed: 'failed',
  blocked: 'blocked',
  retest: 'retest',
  skipped: 'skipped',
  untested: 'untested',
  undefined: 'undefined'
};

exports.Prisma.ModelName = {
  Run: 'Run',
  RunFeature: 'RunFeature',
  RunScenario: 'RunScenario',
  RunStep: 'RunStep',
  Feature: 'Feature',
  Scenario: 'Scenario',
  Step: 'Step',
  ScenarioStep: 'ScenarioStep',
  Tag: 'Tag',
  FeatureTag: 'FeatureTag',
  ScenarioTag: 'ScenarioTag',
  MapNode: 'MapNode',
  MapNodeFeatureData: 'MapNodeFeatureData',
  MapNodeImageData: 'MapNodeImageData',
  MapNodeDependency: 'MapNodeDependency'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
